import Head from "next/head";

import { Inter } from "next/font/google";
import Navbar from "@/components/Navbar";
import Footer from "@/components/Footer";
import Banner from "@/components/Banner";
import SliderMoveCard from "@/components/sliderMoveCard/SliderMoveCard";
import SliderDestacCard from "@/components/sliderDestacCard/SliderDestacCard";
import TestimonioEslider from "@/components/testimonio/TestimonioEslider";
import Onboarding from "@/components/Onboarding/Onboarding";
import MisDatos from "@/components/MiCuenta/MisDatos";
import Banner2 from "@/components/Banner2";
import axios from "axios"

const inter = Inter({ subsets: ["latin"] });
export default function Home({ order, proy }) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <script
          src="https://kit.fontawesome.com/73d94b16ae.js"
          crossorigin="anonymous"
        ></script>
      </Head>
      <Navbar />
      <Banner2 />
      <div className="flex justify-around flex-wrap"></div>
      <Onboarding />
      <main className="  w-[95%]  sm:w-[90%] md:w-[80%] lg:w-[85%]   m-auto ">
        <div className="relative">
          <h2 className="font-bold   text-2xl sm:text-3xl lg:text-4xl  text-text font-Kanit my-4">
            NOVEDADES
          </h2>
          <SliderMoveCard proy={proy} />
        </div>
        <div className="relative">
          <h2 className="font-bold     text-2xl  sm:text-4xl text-text font-Kanit my-4">
            PROYECTOS DESTACADOS
          </h2>
          <SliderDestacCard data={order} />
        </div>
        <TestimonioEslider />
      </main>
      <Footer />
      <MisDatos />
    </>
  );
}

export async function getStaticProps() {
  const res = await axios.get("http://localhost:5000/api/projects");
  const data = res.data;
  const order = data.sort(
    (a, b) => b.parcialAmount / b.totalAmount - a.parcialAmount / a.totalAmount
  );
  const proy = data.slice(data.length - 4, data.length);

  return {
    props: {
      order,
      proy,
    },
  };
}
